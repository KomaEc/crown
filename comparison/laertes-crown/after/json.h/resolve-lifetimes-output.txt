warning: associated function is never used: `mut_`
   --> src/bin/resolve-lifetimes.rs:119:8
    |
119 |     fn mut_() -> Self {
    |        ^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: associated function is never used: `move_`
   --> src/bin/resolve-lifetimes.rs:131:8
    |
131 |     fn move_() -> Self {
    |        ^^^^^

warning: function is never used: `has_non_arith_poison`
   --> src/bin/resolve-lifetimes.rs:157:4
    |
157 | fn has_non_arith_poison(locs: &HashSet<Loc<Name>>, provenance: &PtrProvenanceAnalysis) -> bool {
    |    ^^^^^^^^^^^^^^^^^^^^

warning: 3 warnings emitted

    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `target/release/resolve-lifetimes -f --emulate-lifetime-only -- benchmark/json.h/lib.rs`
poison sigs of fn ptrs? true
Compiler arguments: 'create-initial-program' 'benchmark/json.h/lib.rs'
iteration 1
running struct info pass
Applying fixes
[2023-01-31T06:07:09Z ERROR laertes::compiler_interface::error_handling] processing[E0502] benchmark/json.h/src/json.rs:1257:53: error[E0502]: cannot borrow `state` as immutable because it is also borrowed as mutable
    
[2023-01-31T06:07:09Z ERROR laertes::compiler_interface::error_handling] processing[E0503] benchmark/json.h/src/json.rs:2429:15: error[E0503]: cannot use `state.flags_bitset` because it was mutably borrowed
    
[2023-01-31T06:07:09Z ERROR laertes::compiler_interface::error_handling] processing[E0503] benchmark/json.h/src/json.rs:2490:15: error[E0503]: cannot use `state.flags_bitset` because it was mutably borrowed
    
[2023-01-31T06:07:09Z ERROR laertes::compiler_interface::error_handling] processing[E0596] benchmark/json.h/src/json.rs:2867:26: error[E0596]: cannot borrow `value` as mutable, as it is not declared as mutable
    
[2023-01-31T06:07:09Z ERROR laertes::compiler_interface::error_handling] processing[E0596] benchmark/json.h/src/json.rs:2876:26: error[E0596]: cannot borrow `value` as mutable, as it is not declared as mutable
    
[2023-01-31T06:07:09Z ERROR laertes::compiler_interface::error_handling] processing[E0596] benchmark/json.h/src/json.rs:2885:26: error[E0596]: cannot borrow `value` as mutable, as it is not declared as mutable
    
[2023-01-31T06:07:09Z ERROR laertes::compiler_interface::error_handling] processing[E0596] benchmark/json.h/src/json.rs:2894:26: error[E0596]: cannot borrow `value` as mutable, as it is not declared as mutable
    
New configuration: Configuration { ptr_kind: {Synthetic(HirId { owner: DefId(0:78), local_id: 326 }): Raw, Var(lib::src::json::json_value_as_string::value): Raw, Var(lib::src::json::json_value_as_array::value): Raw, Var(lib::src::json::json_value_as_number::value): Raw, Var(lib::src::json::json_value_as_object::value): Raw, Var(lib::src::json::json_get_number_size::state): Raw, Synthetic(HirId { owner: DefId(0:78), local_id: 891 }): Raw}, move_flows: {}, bounds: {} }
iteration 2
running struct info pass
Applying fixes
DONE: The compiler successfully compiles the code
PROFILING RESULTS
call graph closure: 0 ms
compute SCCs: 154 ms
computing poison sets via equality-based analysis: 36 ms
computing subsets for ownership/poison propagation: 8 ms
constraint solving: 47 ms
constraint solving (TODO: only compute eq classes): 99 ms
constraint solving (addr_of_locs): 47 ms
constraint solving (reborrow_map): 77 ms
constructor constraints: 172 ms
propagating compiler error-derived poisons via subset-based analysis: 0 ms
propagating inline assembly poisons via subset-based analysis: 0 ms
propagating ownership: 0 ms
propagating refcell promotion: 5 ms
propagating upper and lower sets: 175 ms
set constraint solving: 341 ms
transitive closure: 11 ms
