warning: associated function is never used: `mut_`
   --> src/bin/resolve-lifetimes.rs:119:8
    |
119 |     fn mut_() -> Self {
    |        ^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: associated function is never used: `move_`
   --> src/bin/resolve-lifetimes.rs:131:8
    |
131 |     fn move_() -> Self {
    |        ^^^^^

warning: function is never used: `has_non_arith_poison`
   --> src/bin/resolve-lifetimes.rs:157:4
    |
157 | fn has_non_arith_poison(locs: &HashSet<Loc<Name>>, provenance: &PtrProvenanceAnalysis) -> bool {
    |    ^^^^^^^^^^^^^^^^^^^^

warning: 3 warnings emitted

    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `target/release/resolve-lifetimes -f --emulate-lifetime-only -- benchmark/ht/lib.rs`
poison sigs of fn ptrs? true
Compiler arguments: 'create-initial-program' 'benchmark/ht/lib.rs'
iteration 1
running struct info pass
Applying fixes
[2023-01-31T06:07:07Z ERROR laertes::compiler_interface::error_handling] processing[E0495] benchmark/ht/src/ht.rs:253:17: error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements
    
New configuration: Configuration { ptr_kind: {}, move_flows: {}, bounds: {[Fn] lib::src::ht::ht_iterator: {'a1: 'a2}} }
iteration 2
The pointer kinds haven't changed, skipping analysis
Applying fixes
[2023-01-31T06:07:07Z ERROR laertes::compiler_interface::error_handling] processing[E0515] benchmark/ht/src/ht.rs:255:12: error[E0515]: cannot return value referencing function parameter `table`
    
[2023-01-31T06:07:07Z ERROR laertes::compiler_interface::error_handling] processing[E0502] benchmark/ht/src/ht.rs:260:21: error[E0502]: cannot borrow `it` as immutable because it is also borrowed as mutable
    
[2023-01-31T06:07:07Z ERROR laertes::compiler_interface::error_handling] processing[E0499] benchmark/ht/src/ht.rs:261:35: error[E0499]: cannot borrow `it` as mutable more than once at a time
    
[2023-01-31T06:07:07Z ERROR laertes::compiler_interface::error_handling] processing[E0499] benchmark/ht/src/ht.rs:262:44: error[E0499]: cannot borrow `it` as mutable more than once at a time
    
New configuration: Configuration { ptr_kind: {Var(lib::src::ht::ht_next::it): Raw}, move_flows: {SerializableHirId(HirId { owner: DefId(0:25), local_id: 38 }), SerializableHirId(HirId { owner: DefId(0:25), local_id: 57 })}, bounds: {} }
iteration 3
running struct info pass
Applying fixes
[2023-01-31T06:07:08Z ERROR laertes::compiler_interface::error_handling] processing[E0495] benchmark/ht/src/ht.rs:247:18: error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements
    
New configuration: Configuration { ptr_kind: {}, move_flows: {}, bounds: {[Fn] lib::src::ht::ht_iterator: {'a1: 'a2}} }
iteration 4
The pointer kinds haven't changed, skipping analysis
Applying fixes
DONE: The compiler successfully compiles the code
PROFILING RESULTS
call graph closure: 0 ms
compute SCCs: 15 ms
computing poison sets via equality-based analysis: 8 ms
computing subsets for ownership/poison propagation: 0 ms
constraint solving: 2 ms
constraint solving (TODO: only compute eq classes): 4 ms
constraint solving (addr_of_locs): 3 ms
constraint solving (reborrow_map): 3 ms
constructor constraints: 6 ms
propagating compiler error-derived poisons via subset-based analysis: 0 ms
propagating inline assembly poisons via subset-based analysis: 0 ms
propagating ownership: 0 ms
propagating refcell promotion: 1 ms
propagating upper and lower sets: 6 ms
set constraint solving: 22 ms
transitive closure: 0 ms
