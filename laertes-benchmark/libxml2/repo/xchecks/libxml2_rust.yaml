---
- file: "**/*.rs"
  priority: -1
  # Some C structures included in every file
  items:
      - item: struct
        name: _xmlParserCtxt
        fields:
            inputTab: disabled
            space: disabled
            nodeInfo: disabled

      # Node fields outside common part
      - item: struct
        name: _xmlDoc
        custom_hash: "xcheck_hash_xmlDoc"
        custom_hash_format: extern

      - item: struct
        name: _xmlDtd
        custom_hash: "xcheck_hash_xmlDtd"
        custom_hash_format: extern

      - item: struct
        name: _xmlNode
        custom_hash: "xcheck_hash_xmlNode"
        custom_hash_format: extern

      - item: struct
        name: _xmlAttr
        custom_hash: "xcheck_hash_xmlAttr"
        custom_hash_format: extern

      - item: struct
        name: _xmlAttribute
        custom_hash: "xcheck_hash_xmlAttribute"
        custom_hash_format: extern

      - item: struct
        name: _xmlElement
        custom_hash: "xcheck_hash_xmlElement"
        custom_hash_format: extern

      - item: struct
        name: _xmlNs
        custom_hash: "xcheck_hash_xmlNs"
        custom_hash_format: extern

      # These all overlap with each other in memory,
      # but have different layouts
      - item: struct
        name: _xmlSchemaType
        custom_hash: "xcheck_hash_xmlSchemaType"
        custom_hash_format: extern

      - item: struct
        name: _xmlSchemaAttribute
        custom_hash: "xcheck_hash_xmlSchemaAttribute"
        custom_hash_format: extern

      - item: struct
        name: _xmlSchemaWildcard
        custom_hash: "xcheck_hash_xmlSchemaWildcard"
        custom_hash_format: extern

      - item: struct
        name: _xmlSchemaAttributeGroup
        custom_hash: "xcheck_hash_xmlSchemaAttributeGroup"
        custom_hash_format: extern

      - item: struct
        name: _xmlSchemaElement
        custom_hash: "xcheck_hash_xmlSchemaElement"
        custom_hash_format: extern

      - item: struct
        name: _xmlSchemaFacet
        custom_hash: "xcheck_hash_xmlSchemaFacet"
        custom_hash_format: extern

      - item: struct
        name: _xmlSchemaNotation
        custom_hash: "xcheck_hash_xmlSchemaNotation"
        custom_hash_format: extern

      # xmlLastError fields sometimes point to free'd data
      - item: struct
        name: _xmlError
        fields:
            str1: disabled
            str2: disabled
            str3: disabled
            ctxt: disabled
            node: disabled
            # int1 would normally be fine, except `xmlXPathErr` sets it to
            # `ctxt->cur - ctxt->base` which would normally be fine, since
            # `ctxt->cur` should be equal to `ctxt->base + D` for some small
            # offset `D`. However, the `xmlXPtrEvalXPtrPart` function in
            # `xpointer.c` manually sets `ctxt->cur` to another pointer without
            # updating `ctxt->base`, so `int1` here sometimes becomes the
            # difference between 2 completely unrelated pointers.
            int1: disabled

- file: "src/xmlsave.rs"
  items:
      - item: struct
        name: _xmlSaveCtxt
        fields:
            indent: disabled

- file: "src/debugXML.rs"
  items:
      - item: struct
        name: _xmlDebugCtxt
        fields:
            shift: disabled

- file: "src/dict.rs"
  items:
      # These fields may point past the end of the allocated structure
      - item: struct
        name: _xmlDictStrings
        fields:
            free: disabled
            array: disabled
            end: disabled

- file: "src/xmlschemastypes.rs"
  items:
      - item: struct
        name: _xmlSchemaValDate
        custom_hash: "0xABCD0003u64"
        custom_hash_format: expression

      - item: struct
        name: _xmlSchemaValDecimal
        custom_hash: "0xABCD0004u64"
        custom_hash_format: expression

- file: "src/relaxng.rs"
  items:
      - item: struct
        name: _xmlRelaxNGDefine
        fields:
            # attrs might contain a `xmlSchemaVal` instead
            attrs: disabled

      - item: struct
        name: _xmlRelaxNGValidState
        fields:
            # These fields may point to free'd structures
            node: disabled
            seq: disabled
            value: disabled
            endvalue: disabled
            attrs: disabled

- file: "src/xmlmemory.rs"
  items:
    # We get a divergence on the value of `xmlMemUsed` because
    # we allocate more memory for `_xmlSchemaVal`:
    # the structure takes 48 bytes in C, but 56 in Rust
    - item: function
      name: "xmlMemUsed"
      return: disabled

...
